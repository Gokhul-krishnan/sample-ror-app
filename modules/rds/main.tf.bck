# Create a Secrets Manager secret for RDS credentials
resource "aws_secretsmanager_secret" "rds_secret" {
  name        = "${var.db_identifier}-credentials"
  description = "RDS credentials for ${var.db_identifier}"
}

# Store RDS credentials in Secrets Manager
resource "aws_secretsmanager_secret_version" "rds_secret_version" {
  secret_id     = aws_secretsmanager_secret.rds_secret.id
  secret_string = jsonencode({
    username = var.db_username
    password = var.db_password
  })
}

# Create RDS Subnet Group
resource "aws_db_subnet_group" "rds_subnet_group" {
  name       = var.db_subnet_group_name
  subnet_ids = var.private_subnets
}

# Create RDS Instance
resource "aws_db_instance" "rds_instance" {
  identifier              = var.db_identifier
  engine                  = "postgres"
  engine_version          = var.db_engine_version
  instance_class          = var.db_instance_class
  allocated_storage       = var.db_allocated_storage
  max_allocated_storage   = var.db_max_allocated_storage
  storage_encrypted       = true
  kms_key_id              = var.kms_key_arn
  multi_az                = var.multi_az
  publicly_accessible     = false
  db_subnet_group_name    = aws_db_subnet_group.rds_subnet_group.name
  vpc_security_group_ids  = [var.db_sg_id]
#  aws_account_id          = "767397860288"

  # Fetch username & password from AWS Secrets Manager
  username = jsondecode(aws_secretsmanager_secret_version.rds_secret_version.secret_string)["username"]
  password = jsondecode(aws_secretsmanager_secret_version.rds_secret_version.secret_string)["password"]

  parameter_group_name = "default.postgres13"
  skip_final_snapshot  = true

  tags = {
    Name = var.db_identifier
  }
}
